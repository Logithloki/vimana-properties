'use client';

import Image from "next/image";
import Link from 'next/link';
import { useEffect, useState, useRef } from 'react';
import Button from '@/components/Button';
import PropertyCard from '@/components/PropertyCard';
import { useProperties } from '@/contexts/PropertyContext';

export default function Home() {
  const { featuredProperties, properties: allProperties } = useProperties();
  const [scrollY, setScrollY] = useState(0);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  const [isVisible, setIsVisible] = useState({
    hero: false,
    featured: false,
    whyChoose: false,
    stats: false,
    categories: false,
    testimonials: false
  });
  
  const heroRef = useRef<HTMLElement>(null);
  const featuredRef = useRef<HTMLElement>(null);
  const whyChooseRef = useRef<HTMLElement>(null);
  const statsRef = useRef<HTMLElement>(null);
  const categoriesRef = useRef<HTMLElement>(null);
  const testimonialsRef = useRef<HTMLElement>(null);
  const autoScrollRef = useRef<NodeJS.Timeout | null>(null);
  const [currentScrollIndex, setCurrentScrollIndex] = useState(0);
  
  // Get different property types for categories section from all properties
  const propertyTypes = [...new Set(allProperties.map(property => property.type))];

  // Parallax scroll effect
  useEffect(() => {
    const handleScroll = () => setScrollY(window.scrollY);
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Mouse movement effect for hero section
  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      setMousePosition({
        x: (e.clientX / window.innerWidth) * 100,
        y: (e.clientY / window.innerHeight) * 100,
      });
    };
    window.addEventListener('mousemove', handleMouseMove);
    return () => window.removeEventListener('mousemove', handleMouseMove);
  }, []);

  // Handle window resize for responsive auto-scroll
  useEffect(() => {
    const handleResize = () => {
      // Reset scroll position on window resize
      const container = document.getElementById('featured-properties-container');
      if (container) {
        container.scrollTo({ left: 0, behavior: 'smooth' });
        setCurrentScrollIndex(0);
      }
    };
    
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Intersection Observer for animations
  useEffect(() => {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -100px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const targetId = entry.target.getAttribute('data-section');
          if (targetId) {
            setIsVisible(prev => ({
              ...prev,
              [targetId]: true
            }));
          }
        }
      });
    }, observerOptions);

    const sections = [heroRef, featuredRef, whyChooseRef, statsRef, categoriesRef, testimonialsRef];
    sections.forEach(ref => {
      if (ref.current) observer.observe(ref.current);
    });

    return () => observer.disconnect();
  }, []);
  
  // Auto-scroll featured properties
  useEffect(() => {
    if (featuredProperties.length > 0) {
      autoScrollRef.current = setInterval(() => {
        const container = document.getElementById('featured-properties-container');
        if (container) {
          setCurrentScrollIndex((prevIndex) => {
            const nextIndex = (prevIndex + 1) % featuredProperties.length;
            // Calculate scroll position based on card width (384px for md:w-96) + gap (24px)
            const cardWidth = window.innerWidth >= 768 ? 384 : 320; // w-80 = 320px, md:w-96 = 384px
            const gap = 24; // gap-6 = 24px
            const scrollPosition = nextIndex * (cardWidth + gap);
            container.scrollTo({ left: scrollPosition, behavior: 'smooth' });
            return nextIndex;
          });
        }
      }, 4000); // Auto-scroll every 4 seconds

      return () => {
        if (autoScrollRef.current) {
          clearInterval(autoScrollRef.current);
        }
      };
    }
  }, [featuredProperties]);

  // Pause auto-scroll on hover
  const handleMouseEnter = () => {
    if (autoScrollRef.current) {
      clearInterval(autoScrollRef.current);
    }
  };

  const handleMouseLeave = () => {
    if (featuredProperties.length > 0) {
      autoScrollRef.current = setInterval(() => {
        const container = document.getElementById('featured-properties-container');
        if (container) {
          setCurrentScrollIndex((prevIndex) => {
            const nextIndex = (prevIndex + 1) % featuredProperties.length;
            // Calculate scroll position based on card width + gap
            const cardWidth = window.innerWidth >= 768 ? 384 : 320;
            const gap = 24;
            const scrollPosition = nextIndex * (cardWidth + gap);
            container.scrollTo({ left: scrollPosition, behavior: 'smooth' });
            return nextIndex;
          });
        }
      }, 4000);
    }
  };

  return (
    <>
      {/* Hero Section - Enhanced White & Dark Blue Theme */}
      <section 
        ref={heroRef}
        data-section="hero"
        className="relative min-h-screen overflow-hidden bg-gradient-to-br from-white via-slate-50 to-blue-50"
      >
        {/* Animated Background Elements - Enhanced */}
        <div className="absolute inset-0 overflow-hidden">
          {/* Dynamic Floating Orbs */}
          <div 
            className="absolute top-20 left-10 w-96 h-96 bg-gradient-to-r from-blue-600/20 to-blue-900/30 rounded-full blur-3xl animate-pulse"
            style={{
              transform: `translate(${mousePosition.x * 0.03}px, ${mousePosition.y * 0.03}px)`,
              animationDuration: '4s'
            }}
          ></div>
          <div 
            className="absolute top-40 right-20 w-80 h-80 bg-gradient-to-r from-blue-800/15 to-blue-950/25 rounded-full blur-3xl animate-pulse"
            style={{
              transform: `translate(${mousePosition.x * -0.02}px, ${mousePosition.y * -0.02}px)`,
              animationDelay: '1s',
              animationDuration: '6s'
            }}
          ></div>
          <div 
            className="absolute bottom-20 left-1/3 w-72 h-72 bg-gradient-to-r from-blue-700/12 to-blue-900/20 rounded-full blur-3xl animate-pulse"
            style={{
              transform: `translate(${mousePosition.x * 0.025}px, ${mousePosition.y * 0.025}px)`,
              animationDelay: '2s',
              animationDuration: '5s'
            }}
          ></div>
          
          {/* Geometric Patterns */}
          <div 
            className="absolute inset-0 opacity-[0.03]"
            style={{
              backgroundImage: `url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23172554' fill-opacity='1'%3E%3Cpath d='M40 40L20 20v40l20-20zm0 0l20-20v40L40 40z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`,
            }}
          ></div>
          
          {/* Animated Lines */}
          <div className="absolute top-0 left-0 w-full h-full">
            <div className="absolute top-1/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-blue-300/30 to-transparent animate-pulse"></div>
            <div className="absolute top-3/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-blue-400/30 to-transparent animate-pulse" style={{ animationDelay: '2s' }}></div>
          </div>
        </div>
        
        {/* Hero Content - Enhanced */}
        <div className={`container mx-auto px-4 relative z-20 min-h-screen flex flex-col justify-center items-center text-center transition-all duration-2000 ${
          isVisible.hero ? 'translate-y-0 opacity-100' : 'translate-y-16 opacity-0'
        }`}>
          <div className="max-w-6xl mx-auto">
            {/* Premium Badge with Animation */}
            <div className="inline-flex items-center px-8 py-4 bg-white/90 backdrop-blur-xl rounded-full shadow-2xl border border-blue-200/50 mb-12 group hover:scale-110 transition-all duration-500">
              <div className="relative">
                <div className="w-3 h-3 bg-blue-600 rounded-full animate-ping absolute"></div>
                <div className="w-3 h-3 bg-blue-600 rounded-full"></div>
              </div>
              <span className="text-blue-900 font-bold text-base ml-4 group-hover:text-blue-700 transition-colors duration-300">
                üèÜ Premium Real Estate Platform
              </span>
            </div>
            
            {/* Main Heading - Enhanced Typography */}
            <h1 className="text-7xl md:text-8xl lg:text-9xl font-black mb-12 leading-[0.9] tracking-tight">
              <span className="block bg-gradient-to-r from-blue-950 via-blue-800 to-blue-950 bg-clip-text text-transparent drop-shadow-sm">
                Discover Your
              </span>
              <span className="block relative mt-4">
                <span className="bg-gradient-to-r from-blue-900 via-blue-700 to-blue-900 bg-clip-text text-transparent">
                  Dream Home
                </span>
                {/* Enhanced Animated Underline */}
                <div className="absolute -bottom-6 left-1/2 transform -translate-x-1/2 w-3/4 h-3 bg-gradient-to-r from-blue-600 via-blue-500 to-blue-600 rounded-full animate-pulse"></div>
                {/* Sparkle Effect */}
                <div className="absolute -top-4 -right-4 text-4xl animate-bounce" style={{ animationDelay: '1s' }}>‚ú®</div>
                <div className="absolute -bottom-8 -left-8 text-3xl animate-bounce" style={{ animationDelay: '2s' }}>‚≠ê</div>
              </span>
            </h1>
            
            <div className="relative mb-16">
              <p className="text-2xl md:text-3xl mb-4 text-blue-800 leading-relaxed max-w-4xl mx-auto font-semibold">
                Experience luxury living with our 
                <span className="relative">
                  <span className="bg-gradient-to-r from-blue-700 to-blue-600 bg-clip-text text-transparent font-bold"> AI-powered search</span>
                  <div className="absolute -top-1 -right-8 text-xl animate-spin">üîç</div>
                </span>
              </p>
              <p className="text-xl md:text-2xl text-blue-700 leading-relaxed max-w-3xl mx-auto">
                Virtual tours, expert guidance, and premium properties await. 
                <span className="text-blue-600 font-bold animate-pulse">Your perfect home is just one click away.</span>
              </p>
            </div>
            
            {/* Enhanced Search Bar with Animations */}
            <div className="bg-white/95 backdrop-blur-xl rounded-3xl p-10 mb-16 shadow-2xl border border-blue-200/50 max-w-5xl mx-auto group hover:shadow-3xl transition-all duration-500 hover:scale-[1.02]">
              <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
                <div className="group/input">
                  <label className="block text-sm font-bold text-blue-900 mb-3 group-hover/input:text-blue-700 transition-colors">üìç Location</label>
                  <div className="relative">
                    <input 
                      type="text" 
                      placeholder="Enter city or neighborhood..." 
                      className="w-full h-14 px-6 py-4 rounded-2xl bg-blue-50/50 border-2 border-blue-200 text-blue-900 placeholder-blue-400 focus:outline-none focus:border-blue-600 focus:bg-white focus:shadow-lg transition-all duration-300 group-hover/input:border-blue-400 hover:bg-white"
                    />
                    <div className="absolute right-4 top-1/2 transform -translate-y-1/2 text-blue-500 group-hover/input:scale-110 group-hover/input:text-blue-600 transition-all duration-300">
                      <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                      </svg>
                    </div>
                  </div>
                </div>
                
                <div className="group/input">
                  <label className="block text-sm font-bold text-blue-900 mb-3 group-hover/input:text-blue-700 transition-colors">üè† Property Type</label>
                  <select className="w-full h-14 px-6 py-4 rounded-2xl bg-blue-50/50 border-2 border-blue-200 text-blue-900 focus:outline-none focus:border-blue-600 focus:bg-white focus:shadow-lg transition-all duration-300 group-hover/input:border-blue-400 hover:bg-white cursor-pointer">
                    <option value="">All Types</option>
                    <option value="house">üè° Houses</option>
                    <option value="apartment">üè¢ Apartments</option>
                    <option value="condo">üèôÔ∏è Condos</option>
                    <option value="villa">üè∞ Villas</option>
                  </select>
                </div>
                
                <div className="group/input">
                  <label className="block text-sm font-bold text-blue-900 mb-3 group-hover/input:text-blue-700 transition-colors">üí∞ Price Range</label>
                  <select className="w-full h-14 px-6 py-4 rounded-2xl bg-blue-50/50 border-2 border-blue-200 text-blue-900 focus:outline-none focus:border-blue-600 focus:bg-white focus:shadow-lg transition-all duration-300 group-hover/input:border-blue-400 hover:bg-white cursor-pointer">
                    <option value="">Any Budget</option>
                    <option value="0-300000">üíµ $0 - $300k</option>
                    <option value="300000-500000">üí∏ $300k - $500k</option>
                    <option value="500000-1000000">üíé $500k - $1M</option>
                    <option value="1000000+">üëë $1M+</option>
                  </select>
                </div>
                
                <div className="flex items-end">
                  <button className="w-full h-14 rounded-2xl bg-gradient-to-r from-blue-700 to-blue-900 hover:from-blue-800 hover:to-blue-950 text-white font-bold transform hover:scale-105 hover:shadow-2xl transition-all duration-300 flex items-center justify-center group/button">
                    <svg className="w-6 h-6 mr-3 group-hover/button:scale-125 group-hover/button:rotate-12 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">  
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                    <span className="text-lg">Search Now</span>
                    <div className="ml-3 group-hover/button:translate-x-2 transition-transform duration-300">üöÄ</div>
                  </button>
                </div>
              </div>
            </div>
            
            {/* Enhanced CTA Buttons */}
            <div className="flex flex-col sm:flex-row gap-8 justify-center">
              <Link href="/properties">
                <button className="group px-10 py-5 bg-gradient-to-r from-blue-700 to-blue-900 hover:from-blue-800 hover:to-blue-950 text-white font-bold rounded-2xl transform hover:scale-110 hover:shadow-2xl transition-all duration-500 flex items-center text-lg relative overflow-hidden">
                  {/* Background Animation */}
                  <div className="absolute inset-0 bg-gradient-to-r from-white/0 via-white/10 to-white/0 -skew-x-12 transform -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                  <svg className="w-6 h-6 mr-4 group-hover:scale-125 group-hover:rotate-12 transition-all duration-300 relative z-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <span className="relative z-10">Explore Properties</span>
                  <div className="ml-4 group-hover:translate-x-2 transition-transform duration-300 text-2xl relative z-10">üè†</div>
                </button>
              </Link>
              
              <Link href="/contact">
                <button className="group px-10 py-5 bg-white/90 hover:bg-white text-blue-900 hover:text-blue-800 font-bold rounded-2xl border-3 border-blue-300 hover:border-blue-500 backdrop-blur-md transform hover:scale-110 hover:shadow-2xl transition-all duration-500 flex items-center text-lg relative overflow-hidden">
                  {/* Background Animation */}
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-50/0 via-blue-100/50 to-blue-50/0 -skew-x-12 transform -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                  <svg className="w-6 h-6 mr-4 group-hover:scale-125 group-hover:rotate-12 transition-all duration-300 relative z-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                  </svg>
                  <span className="relative z-10">Talk to Expert</span>
                  <div className="ml-4 group-hover:translate-x-2 transition-transform duration-300 text-2xl relative z-10">üí¨</div>
                </button>
              </Link>
            </div>
          </div>
        </div>
        
        {/* Enhanced Scroll Indicator */}
        <div className="absolute bottom-12 left-1/2 transform -translate-x-1/2 animate-bounce">
          <div className="w-8 h-12 border-3 border-blue-400 rounded-full flex justify-center relative group cursor-pointer">
            <div className="w-2 h-4 bg-blue-600 rounded-full mt-3 animate-pulse group-hover:animate-ping"></div>
            <div className="absolute -bottom-8 text-sm text-blue-600 font-semibold opacity-0 group-hover:opacity-100 transition-opacity duration-300">Scroll Down</div>
          </div>
        </div>
      </section>

      {/* Featured Properties Section - Enhanced */}
      <section 
        ref={featuredRef}
        data-section="featured"
        className="py-24 bg-gradient-to-br from-white via-slate-50 to-blue-50 relative overflow-hidden"
      >
        {/* Background Pattern */}
        <div className="absolute inset-0 opacity-[0.02]">
          <div className="absolute inset-0" style={{
            backgroundImage: `url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23172554' fill-opacity='1'%3E%3Cpolygon points='50 0 60 40 100 50 60 60 50 100 40 60 0 50 40 40'/%3E%3C/g%3E%3C/svg%3E")`,
          }}></div>
        </div>
        
        <div className="container mx-auto px-4 relative z-10">
          <div className={`text-center mb-20 transition-all duration-1500 delay-300 ${
            isVisible.featured ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
          }`}>
            <div className="inline-flex items-center bg-blue-100/80 text-blue-800 px-6 py-3 rounded-full text-sm font-bold mb-6 group hover:scale-110 transition-all duration-300">
              <div className="w-2 h-2 bg-blue-600 rounded-full animate-pulse mr-3"></div>
              <span>üèÜ Premium Properties</span>
            </div>
            <h2 className="text-6xl md:text-7xl font-black mb-8 bg-gradient-to-r from-blue-950 via-blue-800 to-blue-950 bg-clip-text text-transparent">
              Featured Properties
            </h2>
            <p className="text-2xl text-blue-700 max-w-4xl mx-auto leading-relaxed font-medium">
              Discover our handpicked selection of 
              <span className="font-bold text-blue-800"> premium properties</span> that redefine luxury living.
            </p>
          </div>

          <div className={`relative transition-all duration-1000 delay-500 ${
            isVisible.featured ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
          }`}>
            {/* Enhanced Navigation Arrows */}
            <button 
              onClick={() => {
                const container = document.getElementById('featured-properties-container');
                if (container) {
                  const cardWidth = window.innerWidth >= 768 ? 384 : 320;
                  const gap = 24;
                  container.scrollBy({ left: -(cardWidth + gap), behavior: 'smooth' });
                }
              }}
              className="absolute left-4 top-1/2 -translate-y-1/2 z-20 bg-white/95 hover:bg-white shadow-2xl rounded-full p-4 transition-all duration-300 hover:scale-125 border border-blue-200 group"
              aria-label="Previous properties"
            >
              <svg className="w-8 h-8 text-blue-600 group-hover:text-blue-800 group-hover:scale-110 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={3} d="M15 19l-7-7 7-7" />
              </svg>
            </button>
            
            <button 
              onClick={() => {
                const container = document.getElementById('featured-properties-container');
                if (container) {
                  const cardWidth = window.innerWidth >= 768 ? 384 : 320;
                  const gap = 24;
                  container.scrollBy({ left: cardWidth + gap, behavior: 'smooth' });
                }
              }}
              className="absolute right-4 top-1/2 -translate-y-1/2 z-20 bg-white/95 hover:bg-white shadow-2xl rounded-full p-4 transition-all duration-300 hover:scale-125 border border-blue-200 group"
              aria-label="Next properties"
            >
              <svg className="w-8 h-8 text-blue-600 group-hover:text-blue-800 group-hover:scale-110 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={3} d="M9 5l7 7-7 7" />
              </svg>
            </button>

            {/* Enhanced Scrolling Container */}
            <div 
              id="featured-properties-container"
              className="flex gap-8 overflow-x-auto scroll-smooth pb-6 scrollbar-hide px-4"
              style={{
                scrollbarWidth: 'none',
                msOverflowStyle: 'none'
              }}
              onMouseEnter={handleMouseEnter}
              onMouseLeave={handleMouseLeave}
            >
              {featuredProperties.map((property, index) => (
                <div 
                  key={property.id}
                  className="flex-none w-80 md:w-96 transform hover:scale-110 transition-all duration-700 hover:shadow-2xl hover:z-10 relative"
                  style={{ 
                    animationDelay: `${index * 150}ms`,
                    filter: 'drop-shadow(0 25px 25px rgb(0 0 0 / 0.15))'
                  }}
                >
                  <div className="group relative overflow-hidden rounded-3xl bg-white shadow-xl hover:shadow-2xl transition-all duration-500">
                    <PropertyCard property={property} />
                    {/* Hover Overlay Effect */}
                    <div className="absolute inset-0 bg-gradient-to-t from-blue-900/20 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none rounded-3xl"></div>
                  </div>
                </div>
              ))}
              
              {/* Extra space at the end */}
              <div className="flex-none w-8"></div>
            </div>
            
            {/* Enhanced Scroll Indicators */}
            <div className="flex justify-center mt-8 space-x-3">
              {featuredProperties.map((_, index) => (
                <button
                  key={index}
                  onClick={() => {
                    const container = document.getElementById('featured-properties-container');
                    if (container) {
                      const cardWidth = window.innerWidth >= 768 ? 384 : 320;
                      const gap = 24;
                      const scrollPosition = index * (cardWidth + gap);
                      container.scrollTo({ left: scrollPosition, behavior: 'smooth' });
                      setCurrentScrollIndex(index);
                    }
                  }}
                  className={`transition-all duration-500 rounded-full ${
                    currentScrollIndex === index 
                      ? 'w-12 h-3 bg-blue-600 shadow-lg' 
                      : 'w-3 h-3 bg-blue-300 hover:bg-blue-500 hover:scale-125'
                  }`}
                  aria-label={`Go to property ${index + 1}`}
                ></button>
              ))}
            </div>
          </div>

          <div className={`text-center mt-20 transition-all duration-1500 delay-700 ${
            isVisible.featured ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
          }`}>
            <Link href="/properties">
              <button className="group px-12 py-6 bg-gradient-to-r from-blue-700 to-blue-900 hover:from-blue-800 hover:to-blue-950 text-white font-bold text-xl rounded-2xl transform hover:scale-110 transition-all duration-500 shadow-2xl hover:shadow-3xl relative overflow-hidden">
                {/* Shimmer Effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -skew-x-12 transform -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                <svg className="w-6 h-6 mr-4 group-hover:scale-125 group-hover:rotate-12 transition-all duration-300 relative z-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                </svg>
                <span className="relative z-10">View All Properties</span>
                <div className="ml-4 group-hover:translate-x-2 transition-transform duration-300 text-2xl relative z-10">üè†</div>
              </button>
            </Link>
          </div>
        </div>
      </section>

      {/* Why Choose Us Section - Enhanced */}
      <section 
        ref={whyChooseRef}
        data-section="whyChoose"
        className="py-24 bg-gradient-to-br from-blue-900 via-blue-800 to-blue-900 text-white relative overflow-hidden"
      >
        {/* Enhanced Background Effects */}
        <div className="absolute inset-0">
          <div className="absolute inset-0 bg-gradient-to-r from-blue-800/50 via-transparent to-blue-800/50"></div>
          <div className="absolute top-0 left-1/4 w-96 h-96 bg-white/5 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-0 right-1/4 w-80 h-80 bg-white/5 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
        </div>
        
        <div className="container mx-auto px-4 relative z-10">
          <div className={`text-center mb-20 transition-all duration-1500 ${
            isVisible.whyChoose ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
          }`}>
            <div className="inline-flex items-center bg-white/10 backdrop-blur text-white px-6 py-3 rounded-full text-sm font-bold mb-6 group hover:scale-110 transition-all duration-300">
              <div className="w-2 h-2 bg-white rounded-full animate-pulse mr-3"></div>
              <span>‚≠ê Why Choose Us</span>
            </div>
            <h2 className="text-6xl md:text-7xl font-black mb-8">
              Unmatched Excellence
            </h2>
            <p className="text-2xl text-blue-100 max-w-4xl mx-auto leading-relaxed font-medium">
              Experience the difference with our 
              <span className="font-bold text-white"> award-winning service</span> and expertise.
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-10">
            {[
              {
                icon: "üõ°Ô∏è",
                title: "Trusted by Thousands",
                description: "Our reputation for honesty, integrity, and exceptional service has made us the trusted choice for thousands of satisfied clients worldwide.",
                color: "from-blue-400 to-blue-600",
                delay: "delay-100"
              },
              {
                icon: "‚úÖ",
                title: "Quality Assurance",
                description: "Every property in our portfolio undergoes a rigorous evaluation process to ensure you're choosing from only the best options available.",
                color: "from-blue-500 to-blue-700",
                delay: "delay-300"
              },
              {
                icon: "üéØ",
                title: "Expert Guidance",
                description: "Our team of experienced real estate professionals provides personalized guidance throughout your entire property journey.",
                color: "from-blue-600 to-blue-800",
                delay: "delay-500"
              }
            ].map((feature, index) => (
              <div 
                key={index}
                className={`group flex flex-col items-center text-center p-10 bg-white/10 backdrop-blur-lg rounded-3xl hover:bg-white/15 transform hover:scale-110 transition-all duration-700 ${
                  isVisible.whyChoose ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
                } ${feature.delay} border border-white/20 hover:border-white/40 relative overflow-hidden`}
              >
                {/* Background Glow Effect */}
                <div className={`absolute inset-0 bg-gradient-to-br ${feature.color} opacity-0 group-hover:opacity-20 transition-opacity duration-500 rounded-3xl`}></div>
                
                <div className="text-6xl mb-6 group-hover:scale-125 group-hover:rotate-12 transition-all duration-500 relative z-10">
                  {feature.icon}
                </div>
                <h3 className="text-3xl font-bold mb-6 relative z-10 group-hover:text-blue-200 transition-colors duration-300">
                  {feature.title}
                </h3>
                <p className="text-blue-100 leading-relaxed text-lg relative z-10 group-hover:text-white transition-colors duration-300">
                  {feature.description}
                </p>
                
                {/* Hover Effect Line */}
                <div className="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-white/0 via-white/50 to-white/0 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500"></div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Statistics Section - Enhanced */}
      <section 
        ref={statsRef}
        data-section="stats"
        className="py-24 bg-gradient-to-br from-white via-slate-50 to-blue-50 relative overflow-hidden"
      >
        {/* Background Pattern */}
        <div className="absolute inset-0 opacity-[0.03]">
          <div className="absolute inset-0" style={{
            backgroundImage: `url("data:image/svg+xml,%3Csvg width='120' height='120' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23172554' fill-opacity='1'%3E%3Crect x='0' y='0' width='60' height='60'/%3E%3Crect x='60' y='60' width='60' height='60'/%3E%3C/g%3E%3C/svg%3E")`,
          }}></div>
        </div>
        
        <div className="container mx-auto px-4 relative z-10">
          <div className={`text-center mb-16 transition-all duration-1500 ${
            isVisible.stats ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
          }`}>
            <h2 className="text-6xl md:text-7xl font-black mb-8 bg-gradient-to-r from-blue-950 via-blue-800 to-blue-950 bg-clip-text text-transparent">
              Our Success Story
            </h2>
            <p className="text-2xl text-blue-700 max-w-4xl mx-auto leading-relaxed font-medium">
              Numbers that speak for our 
              <span className="font-bold text-blue-800"> commitment to excellence</span>
            </p>
          </div>
          
          <div className={`grid grid-cols-2 md:grid-cols-4 gap-8 transition-all duration-1500 ${
            isVisible.stats ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
          }`}>
            {[
              { number: "250+", label: "Properties Sold", icon: "üè†", color: "blue" },
              { number: "98%", label: "Client Satisfaction", icon: "‚≠ê", color: "blue" },
              { number: "15+", label: "Years Experience", icon: "üìÖ", color: "blue" },
              { number: "50+", label: "Expert Agents", icon: "üë•", color: "blue" }
            ].map((stat, index) => (
              <div 
                key={index}
                className={`group text-center p-8 bg-white rounded-3xl shadow-xl hover:shadow-2xl transform hover:scale-110 transition-all duration-700 border border-blue-100 hover:border-blue-300 relative overflow-hidden`}
                style={{ animationDelay: `${index * 200}ms` }}
              >
                {/* Background Gradient */}
                <div className="absolute inset-0 bg-gradient-to-br from-blue-50 to-blue-100 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                
                <div className="text-5xl mb-4 group-hover:scale-125 group-hover:rotate-12 transition-all duration-500 relative z-10">
                  {stat.icon}
                </div>
                <div className="text-5xl md:text-6xl font-black mb-3 text-blue-900 relative z-10 group-hover:text-blue-700 transition-colors duration-300">
                  {stat.number}
                </div>
                <div className="text-lg font-semibold text-blue-600 relative z-10 group-hover:text-blue-800 transition-colors duration-300">
                  {stat.label}
                </div>
                
                {/* Animated Border */}
                <div className="absolute inset-0 border-2 border-blue-400 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500 animate-pulse"></div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Property Categories Section - Enhanced */}
      <section 
        ref={categoriesRef}
        data-section="categories"
        className="py-24 bg-gradient-to-br from-blue-900 via-blue-800 to-blue-900 text-white relative overflow-hidden"
      >
        {/* Background Effects */}
        <div className="absolute inset-0">
          <div className="absolute top-1/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-white/30 to-transparent"></div>
          <div className="absolute bottom-1/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-white/30 to-transparent"></div>
        </div>
        
        <div className="container mx-auto px-4 relative z-10">
          <div className={`text-center mb-20 transition-all duration-1500 ${
            isVisible.categories ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
          }`}>
            <div className="inline-flex items-center bg-white/10 backdrop-blur text-white px-6 py-3 rounded-full text-sm font-bold mb-6 group hover:scale-110 transition-all duration-300">
              <div className="w-2 h-2 bg-white rounded-full animate-pulse mr-3"></div>
              <span>üèòÔ∏è Property Types</span>
            </div>
            <h2 className="text-6xl md:text-7xl font-black mb-8">
              Explore by Category
            </h2>
            <p className="text-2xl text-blue-100 max-w-4xl mx-auto leading-relaxed font-medium">
              From luxury homes to commercial spaces, find the 
              <span className="font-bold text-white"> perfect property type</span> for your lifestyle.
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-10">
            {propertyTypes.map((type, index) => {
              const typeInfo = {
                House: { icon: "üè†", gradient: "from-blue-400 to-blue-600", count: allProperties.filter(p => p.type === type).length },
                Apartment: { icon: "üè¢", gradient: "from-blue-500 to-blue-700", count: allProperties.filter(p => p.type === type).length },
                Condo: { icon: "üèôÔ∏è", gradient: "from-blue-600 to-blue-800", count: allProperties.filter(p => p.type === type).length }
              }[type] || { icon: "üèòÔ∏è", gradient: "from-blue-500 to-blue-700", count: allProperties.filter(p => p.type === type).length };

              return (
                <Link key={type} href={`/properties?type=${type.toLowerCase()}`}>
                  <div className={`group bg-white/10 backdrop-blur-lg rounded-3xl shadow-2xl hover:bg-white/15 transform hover:scale-110 transition-all duration-700 p-10 text-center border border-white/20 hover:border-white/40 cursor-pointer relative overflow-hidden ${
                    isVisible.categories ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
                  }`} style={{ animationDelay: `${index * 200}ms` }}>
                    {/* Background Glow */}
                    <div className={`absolute inset-0 bg-gradient-to-br ${typeInfo.gradient} opacity-0 group-hover:opacity-20 transition-opacity duration-500 rounded-3xl`}></div>
                    
                    <div className="text-7xl mb-6 group-hover:scale-125 group-hover:rotate-12 transition-all duration-500 relative z-10">
                      {typeInfo.icon}
                    </div>
                    <h3 className="text-3xl font-bold mb-4 relative z-10 group-hover:text-blue-200 transition-colors duration-300">
                      {type}
                    </h3>
                    <p className="text-blue-100 mb-6 text-lg relative z-10 group-hover:text-white transition-colors duration-300">
                      {typeInfo.count} premium properties available
                    </p>
                    <div className="inline-flex items-center text-white group-hover:text-blue-200 transition-colors duration-300 relative z-10">
                      <span className="text-lg font-bold">Explore {type}s</span>
                      <svg className="w-6 h-6 ml-3 group-hover:translate-x-2 group-hover:scale-125 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                      </svg>
                    </div>
                    
                    {/* Hover Effect Line */}
                    <div className="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-white/0 via-white/50 to-white/0 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500"></div>
                  </div>
                </Link>
              );
            })}
          </div>
        </div>
      </section>

      {/* Enhanced Call to Action Section */}
      <section className="py-24 bg-gradient-to-br from-white via-slate-50 to-blue-50 relative overflow-hidden">
        {/* Background Effects */}
        <div className="absolute inset-0">
          <div className="absolute top-20 left-20 w-96 h-96 bg-blue-200/20 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-20 right-20 w-80 h-80 bg-blue-300/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
        </div>
        
        <div className="container mx-auto px-4 text-center relative z-10">
          <div className="max-w-5xl mx-auto">
            <div className="inline-flex items-center bg-blue-100/80 text-blue-800 px-6 py-3 rounded-full text-sm font-bold mb-8 group hover:scale-110 transition-all duration-300">
              <div className="w-2 h-2 bg-blue-600 rounded-full animate-pulse mr-3"></div>
              <span>üöÄ Get Started Today</span>
            </div>
            
            <h2 className="text-6xl md:text-7xl font-black mb-8 bg-gradient-to-r from-blue-950 via-blue-800 to-blue-950 bg-clip-text text-transparent">
              Ready to Find Your Dream Property?
            </h2>
            
            <p className="text-2xl text-blue-700 mb-12 max-w-3xl mx-auto leading-relaxed font-medium">
              Get started with our expert real estate team today and discover the 
              <span className="font-bold text-blue-800"> perfect property</span> that matches your vision and budget.
            </p>
            
            <div className="flex flex-col sm:flex-row gap-8 justify-center">
              <Link href="/properties">
                <button className="group px-12 py-6 bg-gradient-to-r from-blue-700 to-blue-900 hover:from-blue-800 hover:to-blue-950 text-white font-bold text-xl rounded-2xl transform hover:scale-110 transition-all duration-500 shadow-2xl hover:shadow-3xl relative overflow-hidden">
                  {/* Shimmer Effect */}
                  <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -skew-x-12 transform -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                  <svg className="w-6 h-6 mr-4 group-hover:scale-125 group-hover:rotate-12 transition-all duration-300 relative z-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                  <span className="relative z-10">Browse Properties</span>
                  <div className="ml-4 group-hover:translate-x-2 transition-transform duration-300 text-2xl relative z-10">üè†</div>
                </button>
              </Link>
              
              <Link href="/contact">
                <button className="group px-12 py-6 bg-white/90 hover:bg-white text-blue-900 hover:text-blue-800 font-bold text-xl rounded-2xl border-3 border-blue-300 hover:border-blue-500 backdrop-blur-md transform hover:scale-110 transition-all duration-500 shadow-2xl hover:shadow-3xl relative overflow-hidden">
                  {/* Shimmer Effect */}
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-50/0 via-blue-100/50 to-blue-50/0 -skew-x-12 transform -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                  <svg className="w-6 h-6 mr-4 group-hover:scale-125 group-hover:rotate-12 transition-all duration-300 relative z-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                  <span className="relative z-10">Schedule Consultation</span>
                  <div className="ml-4 group-hover:translate-x-2 transition-transform duration-300 text-2xl relative z-10">üìû</div>
                </button>
              </Link>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}
